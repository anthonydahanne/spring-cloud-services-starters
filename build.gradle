/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "io.spring.nohttp"
}

description = "Spring Cloud Services Starter Build"

ext.javadocLinks = [
		"https://docs.oracle.com/javase/8/docs/api/",
		"https://docs.spring.io/spring/docs/${springFrameworkVersion}/javadoc-api/",
] as String[]

tasks.register("api", Javadoc) {
	group = "Documentation"
	description = "Generates aggregated Javadoc API documentation."
	title = "${rootProject.description} ${version} API"

	options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
	options.author = true
	options.header = rootProject.description
	options.links(project.ext.javadocLinks)
	options.addStringOption('Xdoclint:none', '-quiet')

	source subprojects
			.find {it.hasProperty('sourceSets') }
			.collect { project -> project.sourceSets.main.allJava }

	classpath = files(subprojects
			.find { it.hasProperty('sourceSets') }
			.collect { project -> project.sourceSets.main.compileClasspath })

	maxMemory = "1024m"
	destinationDir = new File(buildDir, "api")
}

tasks.register("codeCoverageReport", JacocoReport) {
	dependsOn subprojects.find { it.tasks.named('test') }*.test
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

	sourceSets projects.find { it.hasProperty('sourceSets') }*.sourceSets.main

	reports {
		xml.enabled true
		xml.destination new File("${buildDir}/reports/jacoco/report.xml")
		html.enabled false
		csv.enabled false
	}
}

wrapper {
	gradleVersion = "7.1.1"
}
